Linked List
it is data structure used to store collection of data
successive element are pointed by pointer
last element point to null
can shrink or increase in size during execution
space is wasted in storing pointer
  advantage
  expanded in constant time


Array
Arrays are defined as contiguous block of memory so any element will be near it's neighbor
these greatly benefit modern CPU caching method.

constant time is needed to access a element in Array
To calculate address of an element in array we need base address and then add
offset to the base address  of the array
offset = size(data type) * index
  disadvantage
  Preallocates all the needed memory in up front and then waste memory for the indices which are empty
  Fixed size
  To insert a element in a desired position in an array we have to shift rest of the element which is
  expensive if the desired position is in front
Dynamin Array
is a random access ,variable size list data structure which allow element to add or remove

Stacks
it is a order list in which addition and deletion are done in one end of the list called top . it last in first out system (LIFO). last
element to enter is first element to delete.
 three ways to implement Stacks
 1. simple array based implementation
 2. dynamic array based implementation
 3. linked list based implementation

 Queue
 it is a order list in which addition(rear end) and deletion(front end) happen in opposite side of queue. first in first out rule is followed by queue.
 three ways to implement Queue
 1. simple circular array based implementation
 2. dynamic circular array based implementation
 3. linked list based implementation
